// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resistence.Middleware;

namespace Resistence.Middleware.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Resistence.Entities.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("RebeldeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RebeldeId")
                        .IsUnique();

                    b.ToTable("Localizacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = "20 graus sul",
                            Longitude = "44 graus oeste",
                            Nome = "Endor moon",
                            RebeldeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Latitude = "20 graus sul",
                            Longitude = "44 graus oeste",
                            Nome = "Kamino",
                            RebeldeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Latitude = "20 graus sul",
                            Longitude = "44 graus oeste",
                            Nome = "Naboo",
                            RebeldeId = 3
                        });
                });

            modelBuilder.Entity("Resistence.Entities.Rebelde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndicacaoTraidor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsonInventory")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(80);

                    b.Property<bool>("Traidor")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rebeldes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genero = 'M',
                            Idade = 17,
                            IndicacaoTraidor = 0,
                            JsonInventory = "{\"AGUA\":10,\"ARMA\":1,\"COMIDA\":20,\"MUNICAO\":50}",
                            Nome = "Poe Dameron",
                            Traidor = false
                        },
                        new
                        {
                            Id = 2,
                            Genero = 'M',
                            Idade = 50,
                            IndicacaoTraidor = 0,
                            JsonInventory = "{\"AGUA\":10,\"ARMA\":1,\"COMIDA\":20,\"MUNICAO\":50}",
                            Nome = "Leia Organa",
                            Traidor = false
                        },
                        new
                        {
                            Id = 3,
                            Genero = 'O',
                            Idade = 170,
                            IndicacaoTraidor = 0,
                            JsonInventory = "{\"AGUA\":10,\"ARMA\":1,\"COMIDA\":20,\"MUNICAO\":50}",
                            Nome = "C3PO",
                            Traidor = false
                        });
                });

            modelBuilder.Entity("Resistence.Entities.Localizacao", b =>
                {
                    b.HasOne("Resistence.Entities.Rebelde", "Rebelde")
                        .WithOne("Localizacao")
                        .HasForeignKey("Resistence.Entities.Localizacao", "RebeldeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
